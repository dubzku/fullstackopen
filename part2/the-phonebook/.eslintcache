[{"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/index.js":"1","/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/App.js":"2","/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/Filter.js":"3","/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/PersonForm.js":"4","/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/Persons.js":"5"},{"size":155,"mtime":1608238027345,"results":"6","hashOfConfig":"7"},{"size":1795,"mtime":1608585709935,"results":"8","hashOfConfig":"7"},{"size":263,"mtime":1608324874799,"results":"9","hashOfConfig":"7"},{"size":553,"mtime":1608325281014,"results":"10","hashOfConfig":"7"},{"size":583,"mtime":1608325540982,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"msior1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/index.js",[],["24","25"],"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/App.js",[],"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/Filter.js",[],"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/PersonForm.js",[],"/Users/winnieku/Documents/websites/fullstackopen/part2/the-phonebook/src/components/Persons.js",["26"],"import React from 'react'\n\nconst Persons = ({persons, newSearchQuery}) => {\n\n    const displayList = persons.filter((person) => {\n        if (newSearchQuery === '') {\n            return person\n        } else if (person.name.toLowerCase().includes(newSearchQuery.toLowerCase()) || person.name.toUpperCase().includes(newSearchQuery.toUpperCase())) {\n            return person\n        }\n      })\n\n    return (\n        <div>\n        {\n            displayList.map((person, index) => <p key={index}>{person.name} {person.number}</p>)\n        }\n      </div>\n    )\n\n}\n\nexport default Persons",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":5,"column":49,"nodeType":"33","messageId":"34","endLine":5,"endColumn":51},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]